 đọc file excel này với các tính năng
ho người dùng chọn check list, 
In phiếu lương 
Xuất bảng lương

người dùng chọn
sau đó sẽ  cho nhập id nhân viên hoặc tên nhân viên để lấy nhân viên đó tại sheet bảng lương
lấy tháng và năm tại dòng 1 của sheet bảng lương và lưu

1 sheet se có tối thiểu 2 bảng lương, 1 người có thể nằm ở nhiều bảng lương
tên bảng lương nằm ở dòng 8
xuất bảng lương của nhân viên đó + tháng và năm + tên bảng lương.xlxs
VÍ dụ PHAN VĂN THANH_T9_2024_Ky1 
tại dòng 8, có nhiều bảng lương tại 1 dòng
nhưng đều có cú pháp
BẢNG LƯƠNG + xyz
bỏ các khoản trừ các khoản cộng 
vì file này chỉ cần đọc tất cả các dòng của bảng lương
1 file có nhiều sheet
trong đó có sheet bảng lương
các bảng lương đều nằm ở dòng 8, hãy cắt ra và lưu tên từng bảng lương
1 file có nhiều sheet
khi chọn các sheet
ví dụ sheet 4 tên là bảng lương
trong sheet đó tại dòng 8 sẽ có nhiều bảng lương 
ví dụ
BẢNG LƯƠNG KỲ 1 BẢNG LƯƠNG KỲ 2
lỗi hiện tại in ra không có bảng lương nào nhưng thật ra là có 
và print ra thông tin năm tháng đã đọc được

import os
import pandas as pd
from openpyxl import Workbook
from openpyxl.styles import Font, Alignment, PatternFill
import re

def load_data(file_path, sheet_name):
    # Đọc file excel và lấy dữ liệu của sheet
    df = pd.read_excel(file_path, sheet_name=sheet_name, header=None)
    
    # Lấy thông tin tháng và năm từ các cột F, G, H, I tại dòng 1
    month_info = df.iloc[0, 5:9].values  # Cột F, G, H, I
    month_year = ' '.join([str(i) for i in month_info if pd.notna(i)]).strip()
    print(f"Tháng và năm: {month_year}")
    
    # Lấy toàn bộ dòng 8 làm tiêu đề (header) cho dataframe
    salary_row = df.iloc[7, :].values  # Lấy toàn bộ giá trị ở dòng 8
    
    # Tìm tất cả các bảng lương có chứa chuỗi 'BẢNG LƯƠNG'
    salary_tables = [cell for cell in salary_row if pd.notna(cell) and 'BẢNG LƯƠNG' in str(cell)]
    
    if not salary_tables:
        print("Không tìm thấy bảng lương nào theo cú pháp 'BẢNG LƯƠNG'.")
    else:
        print(f"Các bảng lương tìm thấy: {salary_tables}")
    
    # Gán tên cột từ dòng 9
    df.columns = df.iloc[8]
    # Loại bỏ các dòng đầu tiên trước dữ liệu thực
    df = df.drop(index=range(9))

    return df, month_year, salary_tables

def clean_data(df):
    # Loại bỏ các cột toàn NaN
    df = df.dropna(how='all', axis=1)

    # Giữ lại tất cả các hàng, chỉ xóa NaN trong từng hàng
    df = df.fillna('')  # Thay thế NaN bằng chuỗi rỗng

    # In ra dữ liệu đã làm sạch
    print("Dữ liệu sau khi làm sạch:")
    print(df.head(10))  # In ra 10 dòng đầu tiên để kiểm tra

    return df
def search_employee(data, keyword, salary_table, table_start_col, table_end_col):
    # Chúng ta có thể cần làm sạch dữ liệu trước khi tìm kiếm
    name_column = 'Họ tên NV'
    
    # Lọc cột thuộc bảng lương được chọn (từ table_start_col đến table_end_col)
    # Giữ lại cột A và B (cột Họ tên NV)
    relevant_data = pd.concat([data.iloc[:, 0:2], data.iloc[:, table_start_col:table_end_col]], axis=1)
    
    try:
        # Tìm kiếm nhân viên theo tên hoặc ID
        result = relevant_data[relevant_data[name_column].str.contains(keyword, case=False, na=False)]
        
        # Kiểm tra nếu tìm thấy nhân viên
        if not result.empty:
            print(f"Thông tin nhân viên tìm thấy trong {salary_table}:")
            print(result)
        else:
            print(f"Không tìm thấy nhân viên trong {salary_table}.")
        
    except KeyError as e:
        print(f"Lỗi: Không tìm thấy cột '{name_column}' trong dữ liệu.")
        return None
    
    return result
def save_employee_data(employee_data, employee_name, month_year, salary_table, output_folder):
    # Tạo tên file xuất
    sanitized_employee_name = re.sub(r'[\\/:"*?<>|]+', "_", employee_name)
    file_name = f'{sanitized_employee_name}_{month_year}_{salary_table}.xlsx'
    output_path = os.path.join(output_folder, file_name)

    # Tạo workbook mới và viết dữ liệu vào file
    wb = Workbook()
    ws = wb.active
    ws.title = "Thông Tin Nhân Viên"
    
    # Ghi tiêu đề cột
    ws.append(list(employee_data.columns))
    
    # Ghi dữ liệu nhân viên
    for row in employee_data.itertuples(index=False, name=None):
        ws.append(row)
    
    # Định dạng tiêu đề
    for cell in ws[1]:
        cell.font = Font(bold=True, size=12, color="FFFFFF")
        cell.fill = PatternFill(start_color="4F81BD", end_color="4F81BD", fill_type="solid")
        cell.alignment = Alignment(horizontal="center")
    
    # Định dạng các dòng dữ liệu
    for row in ws.iter_rows(min_row=2, min_col=1, max_col=len(employee_data.columns), max_row=len(employee_data)+1):
        for cell in row:
            cell.alignment = Alignment(horizontal="left", vertical="center")
            if isinstance(cell.value, (int, float)):
                cell.number_format = '#,##0'
    
    # Điều chỉnh chiều rộng cột
    min_width = 15
    for column in ws.columns:
        max_length = 0
        column_letter = column[0].column_letter
        for cell in column:
            try:
                if cell.value is not None:
                    max_length = max(max_length, len(str(cell.value)))
            except:
                pass
        adjusted_width = max(max_length + 2, min_width)
        ws.column_dimensions[column_letter].width = adjusted_width
    
    # Lưu file Excel
    wb.save(output_path)
    print(f"Thông tin nhân viên {employee_name} đã được lưu tại: {output_path}")

def main():
    excel_file = r'D:\Salary_Data\2024-_09_BangLuong_v01.xlsx'
    base_folder = r'D:\Salary_Data'

    # Đọc danh sách các sheet trong file Excel
    xls = pd.ExcelFile(excel_file)
    sheets = xls.sheet_names
    print("Danh sách bảng lương có sẵn:")
    for i, sheet in enumerate(sheets, 1):
        print(f"{i}. {sheet}")

    sheet_input = input("Chọn số thứ tự bảng lương: ").strip()
    if sheet_input.isdigit() and 1 <= int(sheet_input) <= len(sheets):
        sheet_name = sheets[int(sheet_input) - 1]
    else:
        print("Vui lòng chọn số hợp lệ.")
        return

    try:
        # Load dữ liệu và lấy thông tin tháng/năm và các bảng lương
        data, month_year, salary_tables = load_data(excel_file, sheet_name)
        cleaned_data = clean_data(data)

        if not salary_tables:
            print("Không tìm thấy bảng lương nào theo cú pháp 'BẢNG LƯƠNG'.")
            return
        
        print("Các bảng lương có sẵn:")
        for i, table in enumerate(salary_tables, 1):
            print(f"{i}. {table}")
        
        # Nhập tên hoặc ID nhân viên
        keyword = input("Nhập tên hoặc ID nhân viên: ").strip()
        
        for i, table in enumerate(salary_tables):
            # Cột bắt đầu và kết thúc của mỗi bảng lương
            table_start_col = 9 * i  # Ví dụ: cột bắt đầu của kỳ 1, kỳ 2, etc.
            table_end_col = table_start_col + 9  # Cột kết thúc của kỳ tương ứng
            
            # Tìm kiếm trong từng bảng lương
            employee_data = search_employee(cleaned_data, keyword, table, table_start_col, table_end_col)
            if employee_data is not None and not employee_data.empty:
                employee_name = employee_data.iloc[0]['Họ tên NV']
                output_folder = os.path.join(base_folder, f'{month_year}_{table}')
                if not os.path.exists(output_folder):
                    os.makedirs(output_folder)

                save_employee_data(employee_data, employee_name, month_year, table, output_folder)
    except Exception as e:
        print(f"Lỗi: {e}")

if __name__ == "__main__":
    main()


tìm điểm chung và làm thuật toán
bảng lương kỳ 1 tittle ( BẢNG LƯƠNG KỲ 1  ):  dòng 8 cột T
bảng lương kỳ 1 name ( HỌ TÊN, CHỨC VỤ... ) : dòng 9 từ T BC
bảng lương kỳ 1 data : dòng 11 từ T đến BC

bảng lương kỳ 2 tittle ( BẢNG LƯƠNG KỲ 2  ):  dòng 8 cột BD
bảng lương kỳ 2 name ( HỌ TÊN, CHỨC VỤ... ) : dòng 9 từ BD đến CR
bảng lương kỳ 2 data :   dòng 11 từ BD đến CR

điểm chung của 2 bảng là đều in ra : dòng 9 10 11 cột a -> s